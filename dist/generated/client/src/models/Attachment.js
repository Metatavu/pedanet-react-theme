// tslint:disable
/**
 * localhost
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { AttachmentCaptionFromJSON, AttachmentCaptionToJSON, AttachmentDescriptionFromJSON, AttachmentDescriptionToJSON, PostGuidFromJSON, PostGuidToJSON, PostTitleFromJSON, PostTitleToJSON, } from './';
export function AttachmentFromJSON(json) {
    return AttachmentFromJSONTyped(json, false);
}
export function AttachmentFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'date': !exists(json, 'date') ? undefined : new Date(json['date']),
        'date_gmt': !exists(json, 'date_gmt') ? undefined : new Date(json['date_gmt']),
        'guid': !exists(json, 'guid') ? undefined : PostGuidFromJSON(json['guid']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'link': !exists(json, 'link') ? undefined : json['link'],
        'modified': !exists(json, 'modified') ? undefined : new Date(json['modified']),
        'modified_gmt': !exists(json, 'modified_gmt') ? undefined : new Date(json['modified_gmt']),
        'slug': !exists(json, 'slug') ? undefined : json['slug'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'permalink_template': !exists(json, 'permalink_template') ? undefined : json['permalink_template'],
        'generated_slug': !exists(json, 'generated_slug') ? undefined : json['generated_slug'],
        'title': !exists(json, 'title') ? undefined : PostTitleFromJSON(json['title']),
        'author': !exists(json, 'author') ? undefined : json['author'],
        'comment_status': !exists(json, 'comment_status') ? undefined : json['comment_status'],
        'ping_status': !exists(json, 'ping_status') ? undefined : json['ping_status'],
        'meta': !exists(json, 'meta') ? undefined : json['meta'],
        'template': !exists(json, 'template') ? undefined : json['template'],
        'alt_text': !exists(json, 'alt_text') ? undefined : json['alt_text'],
        'caption': !exists(json, 'caption') ? undefined : AttachmentCaptionFromJSON(json['caption']),
        'description': !exists(json, 'description') ? undefined : AttachmentDescriptionFromJSON(json['description']),
        'media_type': !exists(json, 'media_type') ? undefined : json['media_type'],
        'mime_type': !exists(json, 'mime_type') ? undefined : json['mime_type'],
        'media_details': !exists(json, 'media_details') ? undefined : json['media_details'],
        'post': !exists(json, 'post') ? undefined : json['post'],
        'source_url': !exists(json, 'source_url') ? undefined : json['source_url'],
    };
}
export function AttachmentToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'date': value.date == null ? undefined : value.date.toISOString(),
        'date_gmt': value.date_gmt == null ? undefined : value.date_gmt.toISOString(),
        'guid': PostGuidToJSON(value.guid),
        'id': value.id,
        'link': value.link,
        'modified': value.modified == null ? undefined : value.modified.toISOString(),
        'modified_gmt': value.modified_gmt == null ? undefined : value.modified_gmt.toISOString(),
        'slug': value.slug,
        'status': value.status,
        'type': value.type,
        'permalink_template': value.permalink_template,
        'generated_slug': value.generated_slug,
        'title': PostTitleToJSON(value.title),
        'author': value.author,
        'comment_status': value.comment_status,
        'ping_status': value.ping_status,
        'meta': value.meta,
        'template': value.template,
        'alt_text': value.alt_text,
        'caption': AttachmentCaptionToJSON(value.caption),
        'description': AttachmentDescriptionToJSON(value.description),
        'media_type': value.media_type,
        'mime_type': value.mime_type,
        'media_details': value.media_details,
        'post': value.post,
        'source_url': value.source_url,
    };
}
/**
* @export
* @enum {string}
*/
export var AttachmentStatusEnum;
(function (AttachmentStatusEnum) {
    AttachmentStatusEnum["Publish"] = "publish";
    AttachmentStatusEnum["Future"] = "future";
    AttachmentStatusEnum["Draft"] = "draft";
    AttachmentStatusEnum["Pending"] = "pending";
    AttachmentStatusEnum["Private"] = "private";
})(AttachmentStatusEnum || (AttachmentStatusEnum = {}));
/**
* @export
* @enum {string}
*/
export var AttachmentCommentStatusEnum;
(function (AttachmentCommentStatusEnum) {
    AttachmentCommentStatusEnum["Open"] = "open";
    AttachmentCommentStatusEnum["Closed"] = "closed";
})(AttachmentCommentStatusEnum || (AttachmentCommentStatusEnum = {}));
/**
* @export
* @enum {string}
*/
export var AttachmentPingStatusEnum;
(function (AttachmentPingStatusEnum) {
    AttachmentPingStatusEnum["Open"] = "open";
    AttachmentPingStatusEnum["Closed"] = "closed";
})(AttachmentPingStatusEnum || (AttachmentPingStatusEnum = {}));
/**
* @export
* @enum {string}
*/
export var AttachmentMediaTypeEnum;
(function (AttachmentMediaTypeEnum) {
    AttachmentMediaTypeEnum["Image"] = "image";
    AttachmentMediaTypeEnum["File"] = "file";
})(AttachmentMediaTypeEnum || (AttachmentMediaTypeEnum = {}));
//# sourceMappingURL=Attachment.js.map