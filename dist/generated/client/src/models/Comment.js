// tslint:disable
/**
 * localhost
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { CommentAuthorAvatarUrlsFromJSON, CommentAuthorAvatarUrlsToJSON, CommentContentFromJSON, CommentContentToJSON, } from './';
export function CommentFromJSON(json) {
    return CommentFromJSONTyped(json, false);
}
export function CommentFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !exists(json, 'id') ? undefined : json['id'],
        'author': !exists(json, 'author') ? undefined : json['author'],
        'author_email': !exists(json, 'author_email') ? undefined : json['author_email'],
        'author_ip': !exists(json, 'author_ip') ? undefined : json['author_ip'],
        'author_name': !exists(json, 'author_name') ? undefined : json['author_name'],
        'author_url': !exists(json, 'author_url') ? undefined : json['author_url'],
        'author_user_agent': !exists(json, 'author_user_agent') ? undefined : json['author_user_agent'],
        'content': !exists(json, 'content') ? undefined : CommentContentFromJSON(json['content']),
        'date': !exists(json, 'date') ? undefined : new Date(json['date']),
        'date_gmt': !exists(json, 'date_gmt') ? undefined : new Date(json['date_gmt']),
        'link': !exists(json, 'link') ? undefined : json['link'],
        'parent': !exists(json, 'parent') ? undefined : json['parent'],
        'post': !exists(json, 'post') ? undefined : json['post'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'author_avatar_urls': !exists(json, 'author_avatar_urls') ? undefined : CommentAuthorAvatarUrlsFromJSON(json['author_avatar_urls']),
        'meta': !exists(json, 'meta') ? undefined : json['meta'],
    };
}
export function CommentToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'author': value.author,
        'author_email': value.author_email,
        'author_ip': value.author_ip,
        'author_name': value.author_name,
        'author_url': value.author_url,
        'author_user_agent': value.author_user_agent,
        'content': CommentContentToJSON(value.content),
        'date': value.date == null ? undefined : value.date.toISOString(),
        'date_gmt': value.date_gmt == null ? undefined : value.date_gmt.toISOString(),
        'link': value.link,
        'parent': value.parent,
        'post': value.post,
        'status': value.status,
        'type': value.type,
        'author_avatar_urls': CommentAuthorAvatarUrlsToJSON(value.author_avatar_urls),
        'meta': value.meta,
    };
}
//# sourceMappingURL=Comment.js.map